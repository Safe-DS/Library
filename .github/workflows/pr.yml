name: Pull Request

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # Build and test DSL component
  build-dsl:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./DSL
    strategy:
      matrix:
        java-version: [ 17 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ matrix.java-version }}
          cache: gradle

      # See https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Test with Gradle
        run: ./gradlew build koverMergedXmlReport

      - name: Upload test report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: Test report
          # upload-artifact does not use working-directory
          path: |
            DSL/com.larsreimann.safeds/build/reports/tests/test/
            DSL/com.larsreimann.safeds.ide/build/reports/tests/test/

      - name: Upload coverage to Codecov
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: DSL/build/reports/kover/merged/xml
          files: report.xml

  # Build and test Runtime > Runner component
  build-runtime-runner:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Runtime/safe-ds-runner
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3.2.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      # Requires installation of pytest and pytest-cov
      - name: Test with pytest
        run: poetry run pytest --doctest-modules --cov=safeds_runner --cov-report=xml

      - name: Upload coverage to Codecov
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: Runtime/safe-ds-runner
          files: coverage.xml

  # Build and test Runtime > Stdlib component
  build-runtime-stdlib:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Runtime/safe-ds
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3.2.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      # Requires installation of pytest and pytest-cov
      - name: Test with pytest
        run: poetry run pytest --doctest-modules --cov=safeds --cov-report=xml

      - name: Upload coverage to Codecov
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: Runtime/safe-ds
          files: coverage.xml
